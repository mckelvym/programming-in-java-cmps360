/* Author:          McKelvy, James Markus
 * CLID:            jmm0468
 * Class:           CMPS360
 * Assignment:      proj3
 * Date Assigned:   Thursday, 12 April 2007, 4:10 PM
 * Due date:        Friday, 4 May 2007, 10:00 PM
 * Description:
 * This module tests the student by loading up questions from a database table. 
 * A running percentage is displayed to the user, and radio buttons are shown for
 * user choice. The user can click to proceed to the next question, and at the end
 * of the test the user is shown their final score.
 */	

package proj3;

import java.sql.*;
/**
* This module tests the student by loading up questions from a database table. 
 * A running percentage is displayed to the user, and radio buttons are shown for
 * user choice. The user can click to proceed to the next question, and at the end
 * of the test the user is shown their final score.
 * @author  mark
 */
public class TestStudent extends javax.swing.JFrame {
    /**
     *Parent window for displaying once this one is disposed.
     */
    private javax.swing.JFrame myparent;
    
    /**
     *A connection to the questions table in the database.
     */
    private Connection connection;
    
    /**
     *A 'pointer' to the list of questions.
     */
    private Question set;
    
    /**
     *Keeps track of which question the student is currently on.
     */
    private int counter = 0;
    
    /**
     *Keeps track of how many questions total there are.
     */
    private int counter_total = 0;
    
    /**
     *A radio button group for the radio buttons so that only one is selected.
     */
    private javax.swing.ButtonGroup radioGroup;
    
    /** Creates new form TestStudent */
    public TestStudent(javax.swing.JFrame parent, Connection c) {
        myparent = parent;
        this.connection = c;
        mainInitialization();
    }
    
    /**
     * Reads the questions from the database connect and stuff them into a temp variable.
     *Initializes the GUI components. Centers the window. Creates
     *a new radio group for the radio buttons. Begins to setup the first question,
     *then displays the frame.
     */
    public void mainInitialization(){
        readQuestions();
        initComponents();
        centerWindow();
        
        radioGroup = new javax.swing.ButtonGroup();
        radioGroup.add(a);
        radioGroup.add(b);
        radioGroup.add(c);
        radioGroup.add(d);
        
        setupQuestion();
        
        this.setVisible(true);
    }

    /**
     *Called when the window is closed. Handles closing of database connection as well. 
     * Sets parent window visible before disposing self.
     */
    public void quit(){
        // close the connection to database
        try {
             connection.close();
        } catch(SQLException e) {
             e.printStackTrace();
        }  
        myparent.setVisible(true);
        dispose();
    }
    
    /**
     *Centers the window on the screen.
     */
    private void centerWindow(){
        java.awt.Dimension screenSize = this.getToolkit().getScreenSize();
        java.awt.Dimension appSize = this.getSize();
        this.setLocation((screenSize.width - appSize.width) / 2,(screenSize.height - appSize.height) / 2);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        nextQuestion = new javax.swing.JButton();
        questionLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        question = new javax.swing.JTextArea();
        choicePanel = new javax.swing.JPanel();
        a = new javax.swing.JRadioButton();
        b = new javax.swing.JRadioButton();
        c = new javax.swing.JRadioButton();
        d = new javax.swing.JRadioButton();
        answer = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        questionNumLabel = new javax.swing.JLabel();
        questionNum = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        score = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        nextQuestion.setText("Next");
        nextQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextQuestionActionPerformed(evt);
            }
        });

        questionLabel.setText("Question:");

        jScrollPane1.setEnabled(false);
        question.setColumns(20);
        question.setEditable(false);
        question.setLineWrap(true);
        question.setRows(5);
        question.setWrapStyleWord(true);
        question.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setViewportView(question);

        a.setText("jRadioButton1");
        a.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        a.setMargin(new java.awt.Insets(0, 0, 0, 0));

        b.setText("jRadioButton2");
        b.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        b.setMargin(new java.awt.Insets(0, 0, 0, 0));

        c.setText("jRadioButton3");
        c.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        c.setMargin(new java.awt.Insets(0, 0, 0, 0));

        d.setText("jRadioButton4");
        d.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        d.setMargin(new java.awt.Insets(0, 0, 0, 0));

        javax.swing.GroupLayout choicePanelLayout = new javax.swing.GroupLayout(choicePanel);
        choicePanel.setLayout(choicePanelLayout);
        choicePanelLayout.setHorizontalGroup(
            choicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(choicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(choicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(choicePanelLayout.createSequentialGroup()
                        .addComponent(a)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(b))
                    .addGroup(choicePanelLayout.createSequentialGroup()
                        .addComponent(c)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(d)))
                .addContainerGap())
        );
        choicePanelLayout.setVerticalGroup(
            choicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(choicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(choicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a)
                    .addComponent(b))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(choicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c)
                    .addComponent(d))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        answer.setText("Your Answer:");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        questionNumLabel.setText("Question #");

        questionNum.setText("jLabel8");

        jLabel1.setText("Current Score");

        score.setText("jLabel2");

        jLabel2.setText("%");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(questionNumLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(questionNum))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(score)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(questionNumLabel)
                    .addComponent(questionNum, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(score)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nextQuestion)
                            .addComponent(questionLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(answer)
                    .addComponent(choicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nextQuestion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(questionLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(answer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(choicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     *Called when window is closing, calls quit()
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        quit();
    }//GEN-LAST:event_formWindowClosing

    /**
     *Handles setting up of a question by clearing all relevant fields, updating
     *all important information including current score.
     */
    private void setupQuestion(){
        questionNum.setText(String.valueOf(counter + 1));
        if(counter_total == 0){
            score.setText("0.0");
        }
        else{
            score.setText(String.valueOf(100 * ((float)counter / (float)counter_total)));
        }
        
        question.setText(set.question);
        a.setText(set.a);
        b.setText(set.b);
        c.setText(set.c);
        d.setText(set.d);
        radioGroup.clearSelection();
    }

    /**
     * Used to cycle to the next question
     */
    private void nextQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextQuestionActionPerformed
        String stu_choice = "";
        if(a.isSelected()){
            stu_choice = "a";
        }
        else if(b.isSelected()){
            stu_choice = "b";
        }
        else if(c.isSelected()){
            stu_choice = "c";
        }
        else if(d.isSelected()){
            stu_choice = "d";
        }
      
        if(stu_choice.equals(set.correctAnswer)){
            counter++;
            counter_total++;
        }
        else{
            counter_total++;
        }
        if(set.next != null){
            set = set.next;
            setupQuestion();            
        }
        else{
            String msg = "You are done with the test\n" + 
                    "Out of " + counter_total + " questions\n" + 
                    "You got " + counter + " right\n" +
                    "Final score is " + String.valueOf(100 * ((float)counter / (float)counter_total)) + "%";
                    
            javax.swing.JOptionPane.showMessageDialog(this, msg);
            quit();
        }
    }//GEN-LAST:event_nextQuestionActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton a;
    private javax.swing.JLabel answer;
    private javax.swing.JRadioButton b;
    private javax.swing.JRadioButton c;
    private javax.swing.JPanel choicePanel;
    private javax.swing.JRadioButton d;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nextQuestion;
    private javax.swing.JTextArea question;
    private javax.swing.JLabel questionLabel;
    private javax.swing.JLabel questionNum;
    private javax.swing.JLabel questionNumLabel;
    private javax.swing.JLabel score;
    // End of variables declaration//GEN-END:variables
    
    /**
     *A temporary class for holding information about a question.
     */
    private class Question{
        public String question;
        public String correctAnswer;
        public String a,b,c,d;
        public Question next;
        public Question prev;
    }
    
    /**
     *Reads questions from database and stores them in a temporary variable for
     *use later.
     */
    private void readQuestions(){
        String tmp;
        Question q = new Question();
        q.prev = null;
        q.next = null;
        
        try{
            // create a Statement object for query execution
            Statement s = connection.createStatement();
            // create a result object
            ResultSet r;
            
            
            // query to get Teacher password info and display of results
            r = s.executeQuery("select * from questions;");
            while(r.next()) {
                q.question = r.getString(1);
                q.correctAnswer = r.getString(2);
                q.a = r.getString(3);
                q.b = r.getString(4);
                q.c = r.getString(5);
                q.d = r.getString(6);
                q.next = new Question();
                q.next.prev = q;
                q.next.next = null;
                q = q.next;
            }
            q = q.prev;
            q.next = null;
        }
        catch(SQLException e){
            e.printStackTrace();
            System.exit(1);
        }

        while(q.prev != null){
            q = q.prev;
        }
        set = q;
    }
}
